<?php

function shift_cipher_menu() {
  $items = array();
  $items['shift_cipher'] = array(
    'title' => 'Shift Cipher',
    'type' => MENU_NORMAL_ITEM,
    'access callback' => TRUE,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('shift_cipher_form'),
  );

  $items['cipher_results'] = array(
    'title' => 'Results',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
    'page callback' => 'cipher_results',
  );

  return $items;
}

function shift_cipher_form() {
  $form = array();
  $form['shift_value'] = array(
    '#title' => 'Shift Value',
    '#type' => 'textfield',
    '#description' => t('Enter the number of spaces in the alphabet you want to shift.'),
    '#element_validate' => array('element_validate_integer_positive'),
    '#required' => TRUE,
  );

  $form['shift_direction'] = array(
    '#title' => 'Shift Direction',
    '#type' => 'textfield',
    '#description' => t('Enter the direction(left or right) of the shift.'),
    '#element_validate' => array('element_validate_direction'),
    '#required' => TRUE,
  );

  $form['phrase_to_shift'] = array(
    '#title' => 'Phrase to Shift',
    '#type' => 'textfield',
    '#description' => t('Enter the phrase to be shifted.'),
    '#element_validate' => array('element_validate_special_characters'),
    '#required' => TRUE,
  ) ;

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Shift',
  );

  return $form;
}

function shift_cipher_form_submit($form, &$form_state) {
  $alphabet_array = ['a' , 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
  $punctuation_array = ['!', '.', ',', ';', '?'];
  $shift_value = $form_state['values']['shift_value'];
  $shift_direction = $form_state['values']['shift_direction'];
  $phrase_to_shift = $form_state['values']['phrase_to_shift'];
  $result = '';
  //Take user string and break it into individual words and place in array
  $exploded_phrase = explode(" ", $phrase_to_shift);
  $shifted_letters = array();
  $shifted_phrase = array();
  //Loop through each word in the array
  foreach($exploded_phrase as $word) {
    //for each word split it into individual letters
    $split_word = str_split($word);
    //for each letter apply cipher
    foreach($split_word as $letter) {
      //check to see if "letter" is punctuation, if it is push it to shifted letters array without applying cypher
      if(in_array($letter, $punctuation_array)) {
        array_push($shifted_letters, $letter);
      }
      //find letter in alphabet array
      $letter_key = array_search($letter, $alphabet_array);
      //if direction is right add shift value, otherwise substract it.
      if($shift_direction === 'right') {
        $shifted_key = $letter_key + $shift_value;
      } else {
          //If number is negative add it to 26 to get positive number.
          $shifted_key = $letter_key - $shift_value;
          if ($shifted_key < 0) {
            $shifted_key += 26;
          }
        }
      //after cipher is applied push changed letter to array
      array_push($shifted_letters, $alphabet_array[$shifted_key]);
    }
      //after all letters have had cypher applied implode them to a word
    $shifted_word = implode('', $shifted_letters);
    //push this word to array of words that will become the new phrase
    array_push($shifted_phrase, $shifted_word);
    //clear letters array
    $shifted_letters = array();
  }
  //take array of new words and implode them to shifted phrase
  $result = implode(' ', $shifted_phrase);
  $_SESSION['cipher_output'] = $result;
  $form_state['redirect'] = 'cipher_results';
}


function cipher_results() {
  $shifted_phrase = $_SESSION['cipher_output'];
  return "Your shifted phrase is $shifted_phrase";
}

function element_validate_direction($element) {
  if($element['#value'] !== 'right' && $element['#value'] !== 'left') {
    form_error($element, t("You must type either 'right' or 'left'."));
  }
}

function element_validate_special_characters($element) {
  $special_characters_array = ['*', '-', '#', '@', '%', '/', '_', '(', ')', ':', '"', '&', '$'];
  if(in_array($element['#value'], $special_characters_array)) {
    form_error($element, t("Special characters (*, _, -, #, @, %, /, (,),:, and &) are not allowed"));
  }
}
